job-portal/
├── config/
│   └── db.js            # Database configuration
├── controllers/
│   └── jobController.js  # Controller for job operations
├── models/
│   └── Job.js            # Job model/schema
├── routes/
│   └── jobRoutes.js      # Routes for job listing
├── middlewares/
│   └── errorHandler.js   # Error handling middleware
├── package.json
├── server.js             # Server entry point
└── .env                  # Environment variables
npm init -y
npm install express mongoose dotenv nodemon
"scripts": {
  "start": "nodemon server.js"
}
const mongoose = require('mongoose');
const connectDB = async () => {
    try {
        await mongoose.connect(process.env.MONGO_URI, {
            useNewUrlParser: true,
            useUnifiedTopology: true
        });
        console.log("MongoDB connected...");
    } catch (error) {
        console.error("MongoDB connection failed:", error.message);
        process.exit(1);
    }
};
module.exports = connectDB;
const mongoose = require('mongoose');

const jobSchema = new mongoose.Schema({
    title: {
        type: String,
        required: true
    },
    description: {
        type: String,
        required: true
    },
    company: {
        type: String,
        required: true
    },
    location: {
        type: String,
        required: true
    },
    salary: Number,
    datePosted: {
        type: Date,
        default: Date.now
    }
});

module.exports = mongoose.model('Job', jobSchema);
const Job = require('../models/Job');

// Get all jobs
exports.getAllJobs = async (req, res) => {
    try {
        const jobs = await Job.find();
        res.json(jobs);
    } catch (error) {
        res.status(500).json({ message: error.message });
    }
};

// Create a new job
exports.createJob = async (req, res) => {
    const { title, description, company, location, salary } = req.body;
    const newJob = new Job({ title, description, company, location, salary });

    try {
        await newJob.save();
        res.status(201).json(newJob);
    } catch (error) {
        res.status(400).json({ message: error.message });
    }
};
const express = require('express');
const router = express.Router();
const jobController = require('../controllers/jobController');

router.get('/jobs', jobController.getAllJobs);
router.post('/jobs', jobController.createJob);

module.exports = router;
MONGO_URI=your_mongo_uri
PORT=5000
function errorHandler(err, req, res, next) {
    console.error(err.stack);
    res.status(500).json({ message: 'Something went wrong!' });
}
module.exports = errorHandler;
const errorHandler = require('./middlewares/errorHandler');
app.use(errorHandler);
